---
title: "Practica3"
author: "Axel Valenzuela"
format: pdf
---



```{python}
#Practica 3. Introduccion al polimorfismo.
# Simular un sistema sistema de cobro con multiples
# opciones de pago.

class pago_tarjeta:
    def procesar_pago(self, cantidad):
        return f"Procesando pago de ${cantidad} con tarjeta"
class transferencia:
    def procesar_pago(self, cantidad):
        return f"procesar pago con transferencia por la cantidad de ${cantidad}"
class deposito:
    def procesar_pago(self, canyidad):
        return f"procesando pago por medio de deposito en ventanilla"
    
class paypal:
    def procesar_pago(self, cantidad):
        return f"procesando el pago de ${cantidad} por medio de paypal"
#Instancia
#metodos_pago = [pago_tarjeta(), transferencia(), deposito(), deposito(), paypal()]

#for m in metodos_pago:
#   print(.procesar_pago(500))

# Procesar pago con diferentes cantidades en cada uno de las formas de pago ejemplo: 100 con tarjeta, 500 con transferencia, 200 con paypal, 400 con deposito,

metodos_pago = [
    (pago_tarjeta(), 500),
    (transferencia(), 1200),
    (deposito(), 1000),
    (paypal(), 2000), 
    ]

for metodo, monto in metodos_pago:
    print(metodo.procesar_pago(monto))

class NotificacionCorreo:
    def enviar_notificacion(self, mensaje):
        return f" Enviando correo con mensaje: '{mensaje}'"

class NotificacionSMS:
    def enviar_notificacion(self, mensaje):
        return f" Enviando SMS con mensaje: '{mensaje}'"

class NotificacionWhatsApp:
    def enviar_notificacion(self, mensaje):
        return f" Enviando WhatsApp con mensaje: '{mensaje}'"

class NotificacionPush:
    def enviar_notificacion(self, mensaje):
        return f" Enviando notificación Push con mensaje: '{mensaje}'"


notificaciones = [
    (NotificacionCorreo(), "Tu pedido fue confirmado"),
    (NotificacionSMS(), "Tu paquete ha sido enviado con exito"),
    (NotificacionWhatsApp(), "Tu pedido está por llegar "),
    (NotificacionPush(), "Tu paquete fue entregado")
]


for canal, mensaje in notificaciones:
    print(canal.enviar_notificacion(mensaje))
```

